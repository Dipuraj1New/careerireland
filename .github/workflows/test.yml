name: Test

on:
  push:
    branches: [ main, development, staging ]
  pull_request:
    branches: [ main, development, staging ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    services:
      # PostgreSQL service for tests
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: careerireland_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      # Redis service for tests
      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create test environment file
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/careerireland_test" > .env.test
          echo "REDIS_URL=redis://localhost:6379" >> .env.test
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env.test
          echo "SUPABASE_KEY=${{ secrets.SUPABASE_KEY }}" >> .env.test
          echo "JWT_SECRET=test-jwt-secret" >> .env.test
          echo "NODE_ENV=test" >> .env.test
      
      - name: Run database migrations
        run: npm run migrate
        env:
          NODE_ENV: test
      
      - name: Run linting
        run: npm run lint
      
      - name: Run tests
        run: npm run test:coverage
        env:
          NODE_ENV: test
      
      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage/
      
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage
          fail_ci_if_error: false
